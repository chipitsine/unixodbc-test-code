#
# "config" section tells us about the purpose of this file and may provide
# some global settings.
#

[config]
Name=Other
Description=Test features introduced in ODBC v3 for conformance.
Author=SAP
Organization=SAP
Created=04.04.29
Revised=

#
# Following sections tell us what to do.
#


[initodbc]
Cd=initodbc

[endodbc]
Cd=endodbc

# connect tests
[connect]
Cd=connect

# only for Unicode DBs
# [uninumtest]
# Cd=uninumtest

# SQLGetTypeInfo
[gettinf]
Cd=gettinf

# SQLTables
[tables]
Cd=tables

# Comments on TABLES, SYNONYMS an COLUMNS
[tablecom]
Cd=tablecom

# SQLColumns
[columns]
Cd=columns

# SQLColumns with all columntypes
[colall]
Cd=colall

# SQLColAttribute
[cola]
Cd=cola

# [utility]
# Cd=utility

# [xcancel]
# Cd=xcancel

# SQLColumns "%" and "" returns the same
[column1]
Cd=column1

# SQLColumns with a SYNONYM
[colsyn]
Cd=colsyn

# SQLBindParameter
[bindparm]
Cd=bindparm

# SQLBrowseConnect
# [browsecn]
# Cd=browsecn

# SQLColAttributes
[colattrb]
Cd=colattrb

# SQLColumnPrivileges
# [columnprv]
# Cd=columnprv

# SQLDescribeCol
[descrcol]
Cd=descrcol

# SQLForeignKeys
[foreigk1]
Cd=foreigk1

# SQLGetConnectOption
[getconop]
Cd=getconop

# SQLGetStmtOption
[getstmop]
Cd=getstmop

# SQLGetFunctions
[getfunc]
Cd=getfunc

# SQLGetInfo
[getinfo1]
Cd=getinfo1

# SQLNativeSql
[nativsql]
Cd=nativsql

#[paramopt]
#Cd=paramopt

# SQLProcedures
#[procedur]
#Cd=procedur

# SQLProcedureColumns
#[proccolm]
#Cd=proccolm

# SQLSetScrollOptions
[scrollop]
Cd=scrollop

# SQLSetPos, still to be implemented 7.4ff
#[setpos]
#Cd=setpos

# SQLSetPos
#[setpos2]
#Cd=setpos2

# SQLSpecialColumns
[speccolm]
Cd=speccolm

# SQLTablePrivileges
[tableprv]
Cd=tableprv

# Call DBPROC's
[dbproc]
Cd=dbproc

# Float-Datatype
[floatnmd]
Cd=floatnmd

# Resulset Maximum
[resltmax]
Cd=resltmax

# (SELECT) an SELECT
[nrescol]
Cd=nrescol

# Dynamic allocate of the sql-data
[longsel]
Cd=longsel

# runs ExecDirect with few commands test the prepare describe mechanism
[execdsel]
Cd=execdsel

# runs invalid SQL statements
[errtst]
Cd=errtst

# test transistion states (SQLFreeStmt behavior)
[transist]
Cd=transist

# runs an ExecDirect with the dual table
[execdual]
Cd=execdual

# runs SQLStatistic with different parameters
[statstc]
Cd=statstc

# SQLGetColAttributes for catalog functions
[descsys]
Cd=descsys

# runs SQLStatistic with named index on a table
[statst1]
Cd=statst1

# runs SQLStatistic with granted table
[statgrnt]
Cd=statgrnt

# float conversion
[trunc]
Cd=trunc

# handle length info for different column types
[types]
Cd=types

# Date and Time Conversion
[dattim]
Cd=dattim

# Date and Time Conversion
[dattim1]
Cd=dattim1

# Date and Time Conversion
[datcnv]
Cd=datcnv

# Multiple Connections
[muconn]
Cd=muconn

# Multiple Environment
[muenv]
Cd=muenv

# SQL_ASYNC_ENABLE_ON
[async]
Cd=async

# run asyncmt only for Windows
[asyncmt]
Cd=asyncmt

# SQLTransact
[transact]
Cd=transact

# Test Eight Sessions
[muconn8]
Cd=muconn8

# Mix from Connections
[conmix]
Cd=conmix

# Subtransactionen (BEGIN TRAN, END TRAN)
[subtrans]
Cd=subtrans

# nputparameter
[parmput]
Cd=parmput

# Insert into ?, ?, ?
[parmpu1]
Cd=parmpu1

# Test binding of Parameter (sqlstate=07001)
[inspar]
Cd=inspar

# Test SQLSetStmtOption an SQLGetStmtOption
[getset]
Cd=getset

# Gets driverversion and sqlcasize
[getinfo]
Cd=getinfo

# NONSTANDARD MySQL Only!
# Test SQL_PASSTHROUGH
#[passtr]
#Cd=passtr

# NONSTANDARD MySQL Only!
# Test SQL_PASSTHROUGH
#[passtr1]
#Cd=passtr1

# NONSTANDARD MySQL Only!
# Test SQL_PASSTHROUGH with row not found
#[passtr2]
#Cd=passtr2

# Test SQLSpecialColumns
[speccol]
Cd=speccol

# Test SQLSFreeStmt (SQL_UNBIND)
[unbind]
Cd=unbind

# Test SQLSetCursorName
[cursor]
Cd=cursor

# Mfetch on and off
[mfetch]
Cd=mfetch

# select update for (switches mfetch off)
[update1]
Cd=update1

# length information for CHAR, VARCHAR
[vchar]
Cd=vchar

# reparsing after a alter table
[parseag]
Cd=parseag

# Columns with length one
[col1]
Cd=col1

# Many columns with SQLGetData
[lgetdata]
Cd=lgetdata

# Longcolumns
[lonchar]
Cd=lonchar

# Longcolumns (Byte)
[lonbchar]
Cd=lonbchar

# 2 Longcolumns with nullvalues
[lonchar1]
Cd=lonchar1

# 2 Longcolumns with nullvalues
[lonchar2]
Cd=lonchar2

# Longcolumns > 32k with SQLBindParameter
[lon1]
Cd=lon1

# Longcolumns > 32k 1 SQLGetData
[lon2]
Cd=lon2

# Longcolumns > 32k n SQLGetData
[lon3]
Cd=lon3

# Longcolumns insert (SQLPutData)
[inslong]
Cd=inslong

# Longcolumns mix 2 long (SQLPutData, SQLParamData)
[ins1]
Cd=ins1

# Checks Constraint violation on NOT NULL Columns
[23000]
Cd=23000

# Division by zero
[numexcep]
Cd=numexcep

# Converts all types SQL_* (Char and Binary)
[cnvchar]
Cd=cnvchar

# Converts all types to SQL_* (Numeric)
[cnvnum]
Cd=cnvnum

# Converts all types to SQL_* (Date)
[cnvdate]
Cd=cnvdate

# Test Converting of numeric values
[values]
Cd=values

# Test Converting of real and float
[real]
Cd=real

# Test Converting of real and float
[reale]
Cd=reale

# Test Converting of fixed
[fixed]
Cd=fixed

# Returns length for pcbValues (SQLBindCol, SQLGetData)
[pcbval]
Cd=pcbval

# SQL_NO_DATA_FOUND for all types
[getdata]
Cd=getdata

# SQLExtendedFetch (rowwise binding)
#[extfrow]
#Cd=extfrow

# SQLExtendedFetch (columnwise binding)
[extendfc]
Cd=extendfc

# SQLExtendedFetch, FETCH_NEXT
[extfonly]
Cd=extfonly

# SQLExtendedFetch (with to many fetch statements )
[ext750]
Cd=ext750

# SQLExtendedFetch with long columns
[extelong]
Cd=extelong

# SQLExtendedFetch single user
#[extesing]
#Cd=extesing

# SQLExtendedFetch updates and deletes from different handle
#[extemut]
#Cd=extemut

# SQLExtendedFetch two long-columns
[extlong2]
Cd=extlong2

# Special Connect component
[compon]
Cd=compon

# SQLSetPos, positioning, updates, deletes
#[optcur]
#Cd=optcur

# SQLSetPos, SQL_CURSOR_KEYSET_DRIVEN, SQL_CONCUR_READ_ONLY
[optcur2]
Cd=optcur2

# SQLSetPos, SQL_CURSOR_KEYSET_DRIVEN, SQL_CONCUR_READ_ONLY, variation
[optcur3]
Cd=optcur3

# SQLSetPos, NEXT & ABSOLUT
[optcur4]
Cd=optcur4

# SQLSetPos, NEXT & ABSOLUT, variation
[optcur5]
Cd=optcur5

# SQLSetPos, NEXT & RELATIV
[optcur6]
Cd=optcur6

# SQLSetPos, FIRST, LAST, RELATIV
[optcur7]
Cd=optcur7

# SQLSetPos, PREV, NEXT, FIRST, LAST, RELATIV
#[optcur8]
#Cd=optcur8

# SQLSetPos, ABSOLUT, NEXT, RELATIV
[optcur9]
Cd=optcur9

# SQLExtendedFetch, SQL_ATTR_OPTIMIZE_CURSOR
[extread]
Cd=extread

# positional reading of long data with two long columns
[longpos]
Cd=longpos

# conversions (good and bad ones)
[o3a]
Cd=o3a

# table with 1023 columns
[o3col]
Cd=o3col

# Tests for the catalog function SQLColumns
[o3columns]
Cd=o3columns

# Tests for SQLAllocHandle, SQLFreeHandle
[o3hndl]
Cd=o3hndl

# Tests for SQLGetDiagRec, SQLGetDiagField
[o3diag]
Cd=o3diag

# descriptor to copy the contents a table to another one
[o3desc1]
Cd=o3desc1

# like o3desc1 additional with long column
[o3desc2]
Cd=o3desc2

# get descriptor fields
[o3desc3]
Cd=o3desc3

# set descriptor fields
[o3desc4]
Cd=o3desc4

# SQLFetchScroll
[o3fscroll]
Cd=o3fscroll

# SQLSetPos, SQL_UPDATE, *octetLengthPtr SQL_IGNORE
[o3ignore]
Cd=o3ignore

# SQLSetPos, SQL_ADD, *octetLengthPtr SQL_IGNORE
[o3ignore2]
Cd=o3ignore2

#[o3ignore3]
#Cd=o3ignore3

# SQL command APPEND to append long data
[o3lappend]
Cd=o3lappend

# SQLGetData and two long columns (first 1024 bytes
[o3lon1]
Cd=o3lon1

# SQLGetData and two long columns (piecewise)
[o3lon2]
Cd=o3lon2

# positional reading of long data
[o3longpos]
Cd=o3longpos

# positional reading of long data
[o3longpos2]
Cd=o3longpos2

# positional reading of long data (two long columns)
[o3longpos3]
Cd=o3longpos3

# SQLPutData, long with length=0 and buffer=NULL
[o3lparam]
Cd=o3lparam

#[o3lparam1]
#Cd=o3lparam1

#[o3proc1]
#Cd=o3proc1

# create and execute db procs with and without result
[o3proc2]
Cd=o3proc2

# special update test
[pts1002071]
Cd=pts1002071

# stmt attr SQL_ROW_NUMBER with and without SQL_ATTR_OPTIMIZE_CURSOR
[o3rownum]
Cd=o3rownum

# special navigation test, SQL_ATTR_OPTIMIZE_CURSOR and mass fetch
###[o3rownum2]
###Cd=o3rownum2

# SQLFetchScroll with changing rowset size
[o3rssize]
Cd=o3rssize

# SQLTables in ver 3
[o3tables]
Cd=o3tables

# getting dynamic function code from diag fields
[o3dynfc]
Cd=o3dynfc

# conversion to and from SQL_C_UBIGINT/SQL_C_SBIGINT
###[o3bigint]
###Cd=o3bigint

# retrieve bookmarks with SQLGetData
[o3bookm1]
Cd=o3bookm1

# retrieve bookmarks that are bound with SQLBindCol
[o3bookm2]
Cd=o3bookm2

# conversion to and from sql for SQL_C_NUMERIC
###[o3numeric]
###Cd=o3numeric

# conversion to and from sql for SQL_C_NUMERIC
###[o3numeric2]
###Cd=o3numeric2

# desc-field SQL_DESC_BIND_OFFSET_PTR and fetch array
[o3boffset1]
Cd=o3boffset1

# check for error 22002 'Indicator variable required but not supplied'
###[o3null]
###Cd=o3null

# SQLSetPos, SQL_ADD, SQLExtendedFetch special error situation
[o3setpos1]
Cd=o3setpos1

# SQLSetPos, SQL_UPDATE and long data with SQL_DATA_AT_EXEC
[o3setpos2]
Cd=o3setpos2

# SQLStatistics
[o3statst1]
Cd=o3statst1

# SQLStatistics
[o3statstc]
Cd=o3statstc

# SQLBulkOperations
[setpos1]
Cd=setpos1

# conversion SLQ[_C]_BIT
[o3cnvbit]
Cd=o3cnvbit

# conversion SLQ[_C]_BIT
[o3cnvbit2]
Cd=o3cnvbit2

# default parameter
[o3nulldefault]
Cd=o3nulldefault

# check different date, time c-type, ver. 2 vs 3
[datetimetype]
Cd=datetimetype

# SQLBrowseConnect tests
###[browseconnect]
###Cd=browseconnect

# reuse hstmt after SQLFree (UNBIND)
[o3rebind]
Cd=o3rebind

# set/get codepage. Does not convert anything
[codepage]
Cd=codepage

# timestamp fraction
[timestamp]
Cd=timestamp

